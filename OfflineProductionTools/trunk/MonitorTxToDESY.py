#!/usr/bin/env python

import os, sys
import datetime
from dateutil.relativedelta import relativedelta
import smtplib
sys.path.append("/data/user/i3filter/SQLServers_n_Clients/")


try:
    import SQLClient_dbs4 as dbs4
    dbs4_ = dbs4.MySQL()
except Exception, err:
    raise Exception("Error: %s "%str(err))

def GetDbInfo(Dataset_Id=[1871],LookBack=24):
    
    Dataset_Id = ",".join([str(d) for d in Dataset_Id])
    CheckTime=datetime.datetime.now()+relativedelta(hours=-LookBack)
    
    try:
        Info = dbs4_.fetchall(""" SELECT u.name,u.size,j.status_changed,g.validated
                                FROM i3filter.urlpath u join i3filter.job j on u.queue_id=j.queue_id
                                join i3filter.run r on r.queue_id=u.queue_id
                                join i3filter.grl_snapshot_info g on r.run_id=g.run_id
                                where u.dataset_id in (%s) and j.dataset_id in (%s) and r.dataset_id in (%s)
                                and u.transferstate="WAITING"
                                and j.status_changed<="%s"
                                and g.validated
                                group by u.name
                                order by j.status_changed
                                """%(Dataset_Id,Dataset_Id,Dataset_Id,CheckTime),UseDict=True)
                                
    
        return Info,LookBack
    
    except Exception, err:
        raise Exception("Error: %s "%str(err))

def CreateMsg(DbInfo,LookBack,domain,sender,receivers):
    try:
        SizeGB = sum([s['size'] for s in DbInfo])/1024/1024/1024
        
        msg = "From: " + sender + "<" + sender+domain + ">\n"
        msg += "To: " + ",".join([r[0:r.find('@')]+ "<%s>"%r for r in receivers]) + "\n"
        msg += "Subject: Madison->DESY file transfer backlog notification\n\n"
        
        msg += """
              *** This is an automated message generated by the ***
              ***    Madison->DESY transfer monitoring system   ***
              
              The database records show that there are some files that are ready to
              be transferred and have been waiting for ** %shrs ** or more.
              
              No. of files waiting to be copied: %s
              Total size of backlog is: %s (GB)
              The oldest file ready to be copied was created on %s
              """%(LookBack,len(DbInfo),SizeGB,DbInfo[0]['status_changed'])
     
        return msg
              
    except Exception,err:
        raise Exception("Error: %s"%str(err))

def SendMsg(sender,receivers,message):
    try:
        smtpObj = smtplib.SMTP('mail.icecube.wisc.edu')
        #smtpObj = smtplib.SMTP('127.0.0.1')
        smtpObj.sendmail(sender, receivers, message)         
        print "Successfully sent email"
    except Exception,err:
        raise Exception("Error: %s"%str(err))
 
 
print "\nChecking backlog at %s"%datetime.datetime.now()  
DbInfo,LookBack = GetDbInfo()
if not len(DbInfo):
    print "no files waiting to be transferred ... exiting"
    exit(0)

domain = '@icecube.wisc.edu'
sender = 'ofadiran'
receivers = ['achim.stoessl@desy.de','ofadiran@gmail.com']

message = CreateMsg(DbInfo,LookBack,domain,sender,receivers)

SendMsg(sender,receivers,message)




